#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite –≤ MariaDB
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Python
"""

import sqlite3
import subprocess
import json
from datetime import datetime
import os

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
SQLITE_DB = '/root/CrewServiceWebsite/CrewServiceWebsite/CrewServiceWebsite/crewlife-website/backend/crewlife.db'

def run_mysql_command(sql):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL –∫–æ–º–∞–Ω–¥—ã –≤ MariaDB"""
    try:
        cmd = f"mysql -u crewlife_user -pandrei8002012 crewlife_prod -e \"{sql}\""
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        if result.returncode != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ SQL: {result.stderr}")
            return False
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}")
        return False

def get_sqlite_data():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite"""
    print("üìä –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ SQLite...")
    
    with sqlite3.connect(SQLITE_DB) as conn:
        conn.row_factory = sqlite3.Row
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute('''
            SELECT employee_id, first_name, last_name, position, location, 
                   email, password_hash, role, status, created_at, last_login
            FROM users
        ''')
        users = [dict(row) for row in cursor.fetchall()]
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞—è–≤–∫–∏
        cursor.execute('''
            SELECT user_id, request_type, title, description, priority, 
                   status, assigned_to, created_at, updated_at, resolved_at
            FROM requests
        ''')
        requests = [dict(row) for row in cursor.fetchall()]
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        cursor.execute('''
            SELECT key, value, description, category, updated_at
            FROM settings
        ''')
        settings = [dict(row) for row in cursor.fetchall()]
        
        return users, requests, settings

def migrate_users_to_mariadb(users):
    """–ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ MariaDB"""
    print(f"üîÑ –ú–∏–≥—Ä–∏—Ä—É–µ–º {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    if not run_mysql_command("DELETE FROM users"):
        return False
    
    migrated_count = 0
    for user in users:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ö–µ—à –ø–∞—Ä–æ–ª—è (–≤ —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å bcrypt)
        # –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º SHA-256
        import hashlib
        new_password = hashlib.sha256('andrei8002012'.encode()).hexdigest()
        
        full_name = f"{user['first_name']} {user['last_name']}"
        is_active = 1 if user['status'] == 'active' else 0
        
        sql = f"""
        INSERT INTO users 
        (employee_id, full_name, position, location, password, is_active, created_at, last_login)
        VALUES ('{user['employee_id']}', '{full_name}', '{user['position']}', 
                '{user['location']}', '{new_password}', {is_active}, 
                '{user['created_at']}', {f"'{user['last_login']}'" if user['last_login'] else 'NULL'})
        """
        
        if run_mysql_command(sql):
            migrated_count += 1
            print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω: {user['employee_id']} - {full_name}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {user['employee_id']}")
    
    print(f"üéâ –£—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ {migrated_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    return True

def migrate_settings_to_mariadb(settings):
    """–ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ MariaDB"""
    print(f"üîÑ –ú–∏–≥—Ä–∏—Ä—É–µ–º {len(settings)} –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    
    # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
    if not run_mysql_command("DELETE FROM settings"):
        return False
    
    migrated_count = 0
    for setting in settings:
        sql = f"""
        INSERT INTO settings 
        (setting_key, setting_value, description, category, updated_at)
        VALUES ('{setting['key']}', '{setting['value']}', 
                '{setting['description']}', '{setting['category']}', 
                '{setting['updated_at']}')
        """
        
        if run_mysql_command(sql):
            migrated_count += 1
            print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: {setting['key']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {setting['key']}")
    
    print(f"üéâ –£—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ {migrated_count} –Ω–∞—Å—Ç—Ä–æ–µ–∫")
    return True

def create_backup():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"""
    print("üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é SQLite...")
    
    backup_filename = f"crewlife_sqlite_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.db"
    backup_path = f"/root/CrewServiceWebsite/CrewServiceWebsite/CrewServiceWebsite/{backup_filename}"
    
    try:
        with sqlite3.connect(SQLITE_DB) as source:
            with sqlite3.connect(backup_path) as backup:
                source.backup(backup)
        
        print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_path}")
        return backup_path
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –º–∏–≥—Ä–∞—Ü–∏—é —Å SQLite –Ω–∞ MariaDB")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MariaDB
    if not run_mysql_command("SELECT 1"):
        print("‚ùå –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MariaDB")
        return
    
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MariaDB —É—Å–ø–µ—à–Ω–æ")
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = create_backup()
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ SQLite
    users, requests, settings = get_sqlite_data()
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –≤ SQLite:")
    print(f"   üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
    print(f"   üìù –ó–∞—è–≤–æ–∫: {len(requests)}")
    print(f"   ‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–µ–∫: {len(settings)}")
    
    # –ú–∏–≥—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
    success = True
    
    if users:
        success &= migrate_users_to_mariadb(users)
    
    if settings:
        success &= migrate_settings_to_mariadb(settings)
    
    if success:
        print("\n" + "=" * 60)
        print("üéâ –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("=" * 60)
        print("üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:")
        print("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        print("   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        print(f"   üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è: {backup_path}")
        print("\nüîê –í–ê–ñ–ù–û: –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ –ø–∞—Ä–æ–ª—å 'andrei8002012'")
        print("   (—Ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SHA-256)")
    else:
        print("‚ùå –ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–∞–º–∏")

if __name__ == "__main__":
    main()
