// –°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è PWA –º–µ—Ç–∞-—Ç–µ–≥–æ–≤ –≤–æ –≤—Å–µ—Ö HTML —Ñ–∞–π–ª–∞—Ö

const fs = require('fs');
const path = require('path');

// PWA –º–µ—Ç–∞-—Ç–µ–≥–∏ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
const pwaMetaTags = `    <!-- PWA Meta Tags -->
    <meta name="description" content="CrewLife - –°–∏—Å—Ç–µ–º–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ –¥–ª—è –±–æ—Ä—Ç–ø—Ä–æ–≤–æ–¥–Ω–∏–∫–æ–≤">
    <meta name="theme-color" content="#FF4D4D">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="default">
    <meta name="apple-mobile-web-app-title" content="CrewLife">
    <meta name="msapplication-TileColor" content="#FF4D4D">
    <meta name="msapplication-config" content="/browserconfig.xml">
    
    <!-- Manifest -->
    <link rel="manifest" href="manifest.json">
    
    <!-- Icons -->
    <link rel="icon" type="image/png" sizes="32x32" href="icons/icon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="icons/icon-16x16.png">
    <link rel="apple-touch-icon" href="icons/icon-192x192.png">
    <link rel="apple-touch-icon" sizes="152x152" href="icons/icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="icons/icon-192x192.png">
    <link rel="apple-touch-icon" sizes="167x167" href="icons/icon-192x192.png">`;

// PWA —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
const pwaScript = `    <script src="scripts/pwa.js"></script>`;

// –°–ø–∏—Å–æ–∫ HTML —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
const htmlFiles = [
    'login.html',
    'register.html',
    'profile.html',
    'requests.html',
    'calendar.html',
    'help.html',
    'flight-booking.html'
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è HTML —Ñ–∞–π–ª–∞
function updateHtmlFile(filePath) {
    try {
        let content = fs.readFileSync(filePath, 'utf8');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ PWA –º–µ—Ç–∞-—Ç–µ–≥–∏
        if (content.includes('manifest.json')) {
            console.log(`PWA –º–µ—Ç–∞-—Ç–µ–≥–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ ${filePath}`);
            return;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º PWA –º–µ—Ç–∞-—Ç–µ–≥–∏ –ø–æ—Å–ª–µ viewport
        content = content.replace(
            /<meta name="viewport" content="width=device-width, initial-scale=1\.0">/,
            `<meta name="viewport" content="width=device-width, initial-scale=1.0">\n${pwaMetaTags}`
        );
        
        // –î–æ–±–∞–≤–ª—è–µ–º PWA —Å–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º —Ç–µ–≥–æ–º head
        content = content.replace(
            /<\/head>/,
            `${pwaScript}\n</head>`
        );
        
        // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        fs.writeFileSync(filePath, content, 'utf8');
        console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω ${filePath}`);
        
    } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ${filePath}:`, error.message);
    }
}

// –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ HTML —Ñ–∞–π–ª—ã
console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ PWA –º–µ—Ç–∞-—Ç–µ–≥–æ–≤...\n');

htmlFiles.forEach(file => {
    const filePath = path.join(__dirname, file);
    if (fs.existsSync(filePath)) {
        updateHtmlFile(filePath);
    } else {
        console.log(`‚ö†Ô∏è  –§–∞–π–ª ${file} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }
});

console.log('\n‚ú® –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
