// –£–ª—É—á—à–µ–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –æ–ø—ã—Ç–∞ –¥–ª—è CrewLife

class MobileEnhancements {
    constructor() {
        this.touchStartX = 0;
        this.touchStartY = 0;
        this.touchEndX = 0;
        this.touchEndY = 0;
        this.isScrolling = false;
        this.pullToRefreshThreshold = 60;
        this.swipeThreshold = 50;
        
        this.init();
    }

    init() {
        this.setupTouchEvents();
        this.setupSwipeGestures();
        this.setupPullToRefresh();
        this.setupHapticFeedback();
        this.setupViewportOptimization();
        this.setupMobileMenu();
        this.setupKeyboardHandling();
        this.setupOrientationHandling();
        this.optimizeForSlowConnection();
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ–Ω—Å–æ—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π
    setupTouchEvents() {
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑—É–º –ø—Ä–∏ –¥–≤–æ–π–Ω–æ–º —Ç–∞–ø–µ
        let lastTouchEnd = 0;
        document.addEventListener('touchend', (e) => {
            const now = new Date().getTime();
            if (now - lastTouchEnd <= 300) {
                e.preventDefault();
            }
            lastTouchEnd = now;
        }, false);

        // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞—Å–∞–Ω–∏–π
        document.addEventListener('touchstart', (e) => {
            this.handleTouchStart(e);
        }, { passive: true });

        document.addEventListener('touchmove', (e) => {
            this.handleTouchMove(e);
        }, { passive: false });

        document.addEventListener('touchend', (e) => {
            this.handleTouchEnd(e);
        }, { passive: true });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª–∞ –∫–∞—Å–∞–Ω–∏—è
    handleTouchStart(e) {
        const touch = e.touches[0];
        this.touchStartX = touch.clientX;
        this.touchStartY = touch.clientY;
        this.isScrolling = false;
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–≤–∏–∂–µ–Ω–∏—è –∫–∞—Å–∞–Ω–∏—è
    handleTouchMove(e) {
        if (!this.touchStartX || !this.touchStartY) return;

        const touch = e.touches[0];
        const deltaX = touch.clientX - this.touchStartX;
        const deltaY = touch.clientY - this.touchStartY;

        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, —ç—Ç–æ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∏–ª–∏ –∂–µ—Å—Ç
        if (Math.abs(deltaY) > Math.abs(deltaX)) {
            this.isScrolling = true;
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ pull-to-refresh
        if (window.scrollY === 0 && deltaY > 0) {
            this.handlePullToRefresh(deltaY);
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫–∞—Å–∞–Ω–∏—è
    handleTouchEnd(e) {
        if (!this.touchStartX || !this.touchStartY) return;

        const touch = e.changedTouches[0];
        this.touchEndX = touch.clientX;
        this.touchEndY = touch.clientY;

        if (!this.isScrolling) {
            this.handleSwipe();
        }

        this.resetTouchData();
    }

    // –°–±—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –∫–∞—Å–∞–Ω–∏—è
    resetTouchData() {
        this.touchStartX = 0;
        this.touchStartY = 0;
        this.touchEndX = 0;
        this.touchEndY = 0;
        this.isScrolling = false;
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∂–µ—Å—Ç–æ–≤ —Å–≤–∞–π–ø–∞
    setupSwipeGestures() {
        // –°–≤–∞–π–ø –≤–ª–µ–≤–æ/–≤–ø—Ä–∞–≤–æ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        document.addEventListener('swipeleft', () => {
            this.handleSwipeLeft();
        });

        document.addEventListener('swiperight', () => {
            this.handleSwipeRight();
        });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–≤–∞–π–ø–∞
    handleSwipe() {
        const deltaX = this.touchEndX - this.touchStartX;
        const deltaY = this.touchEndY - this.touchStartY;

        if (Math.abs(deltaX) > this.swipeThreshold) {
            if (deltaX > 0) {
                this.handleSwipeRight();
            } else {
                this.handleSwipeLeft();
            }
        }

        if (Math.abs(deltaY) > this.swipeThreshold) {
            if (deltaY > 0) {
                this.handleSwipeDown();
            } else {
                this.handleSwipeUp();
            }
        }
    }

    // –°–≤–∞–π–ø –≤–ª–µ–≤–æ
    handleSwipeLeft() {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
        const mobileMenu = document.getElementById('mobileMenu');
        if (mobileMenu && mobileMenu.classList.contains('open')) {
            this.closeMobileMenu();
        }
    }

    // –°–≤–∞–π–ø –≤–ø—Ä–∞–≤–æ
    handleSwipeRight() {
        // –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é
        const mobileMenu = document.getElementById('mobileMenu');
        if (mobileMenu && !mobileMenu.classList.contains('open')) {
            this.openMobileMenu();
        }
    }

    // –°–≤–∞–π–ø –≤–≤–µ—Ä—Ö
    handleSwipeUp() {
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–≤–µ—Ä—Ö
        window.scrollBy(0, -100);
    }

    // –°–≤–∞–π–ø –≤–Ω–∏–∑
    handleSwipeDown() {
        // –ü—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑
        window.scrollBy(0, 100);
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ pull-to-refresh
    setupPullToRefresh() {
        // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä pull-to-refresh
        this.createPullToRefreshIndicator();
    }

    // –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ pull-to-refresh
    createPullToRefreshIndicator() {
        const indicator = document.createElement('div');
        indicator.id = 'pullToRefresh';
        indicator.className = 'pull-to-refresh';
        indicator.innerHTML = `
            <div class="refresh-content">
                <div class="refresh-icon">üîÑ</div>
                <span>–ü–æ—Ç—è–Ω–∏—Ç–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è</span>
            </div>
        `;
        document.body.appendChild(indicator);
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ pull-to-refresh
    handlePullToRefresh(deltaY) {
        const indicator = document.getElementById('pullToRefresh');
        if (!indicator) return;

        if (deltaY > this.pullToRefreshThreshold) {
            indicator.classList.add('show');
            indicator.querySelector('.refresh-icon').style.transform = 'rotate(180deg)';
        } else {
            indicator.classList.remove('show');
            indicator.querySelector('.refresh-icon').style.transform = 'rotate(0deg)';
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏–∏
        if (deltaY > this.pullToRefreshThreshold * 1.5) {
            this.refreshPage();
        }
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    refreshPage() {
        const indicator = document.getElementById('pullToRefresh');
        if (indicator) {
            indicator.querySelector('span').textContent = '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ...';
            indicator.querySelector('.refresh-icon').style.animation = 'spin 1s linear infinite';
        }

        setTimeout(() => {
            window.location.reload();
        }, 1000);
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–∫—Ç–∏–ª—å–Ω–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    setupHapticFeedback() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∫—É –≤–∏–±—Ä–∞—Ü–∏–∏
        if ('vibrate' in navigator) {
            this.setupVibrationFeedback();
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–∏–±—Ä–∞—Ü–∏–∏
    setupVibrationFeedback() {
        // –í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–æ–∫
        document.addEventListener('click', (e) => {
            if (e.target.matches('button, .btn, .request-btn, .header-btn')) {
                this.vibrate(50);
            }
        });

        // –í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö
        document.addEventListener('error', () => {
            this.vibrate([100, 50, 100]);
        });

        // –í–∏–±—Ä–∞—Ü–∏—è –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
        document.addEventListener('success', () => {
            this.vibrate([50, 50, 50]);
        });
    }

    // –í–∏–±—Ä–∞—Ü–∏—è
    vibrate(pattern) {
        if ('vibrate' in navigator) {
            navigator.vibrate(pattern);
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ viewport
    setupViewportOptimization() {
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑—É–º –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ –Ω–∞ input
        const inputs = document.querySelectorAll('input, select, textarea');
        inputs.forEach(input => {
            input.addEventListener('focus', () => {
                this.preventZoomOnFocus(input);
            });
        });

        // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–π
        this.handleOrientationChange();
        window.addEventListener('orientationchange', () => {
            setTimeout(() => {
                this.handleOrientationChange();
            }, 100);
        });
    }

    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –∑—É–º–∞ –ø—Ä–∏ —Ñ–æ–∫—É—Å–µ
    preventZoomOnFocus(input) {
        const viewport = document.querySelector('meta[name="viewport"]');
        if (viewport) {
            viewport.content = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';
            
            input.addEventListener('blur', () => {
                viewport.content = 'width=device-width, initial-scale=1.0';
            }, { once: true });
        }
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
    handleOrientationChange() {
        const isPortrait = window.innerHeight > window.innerWidth;
        
        if (isPortrait) {
            document.body.classList.add('portrait');
            document.body.classList.remove('landscape');
        } else {
            document.body.classList.add('landscape');
            document.body.classList.remove('portrait');
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    setupMobileMenu() {
        const menuBtn = document.getElementById('mobileMenuBtn');
        const menu = document.getElementById('mobileMenu');
        const closeBtn = document.getElementById('mobileMenuClose');

        if (menuBtn && menu) {
            menuBtn.addEventListener('click', () => {
                this.toggleMobileMenu();
            });
        }

        if (closeBtn && menu) {
            closeBtn.addEventListener('click', () => {
                this.closeMobileMenu();
            });
        }

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–µ–Ω—é
        if (menu) {
            menu.addEventListener('click', (e) => {
                if (e.target === menu) {
                    this.closeMobileMenu();
                }
            });
        }
    }

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    toggleMobileMenu() {
        const menu = document.getElementById('mobileMenu');
        if (menu) {
            if (menu.classList.contains('open')) {
                this.closeMobileMenu();
            } else {
                this.openMobileMenu();
            }
        }
    }

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    openMobileMenu() {
        const menu = document.getElementById('mobileMenu');
        const menuBtn = document.getElementById('mobileMenuBtn');
        
        if (menu && menuBtn) {
            menu.classList.add('open');
            menuBtn.setAttribute('aria-expanded', 'true');
            document.body.style.overflow = 'hidden';
            this.vibrate(50);
        }
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –º–µ–Ω—é
    closeMobileMenu() {
        const menu = document.getElementById('mobileMenu');
        const menuBtn = document.getElementById('mobileMenuBtn');
        
        if (menu && menuBtn) {
            menu.classList.remove('open');
            menuBtn.setAttribute('aria-expanded', 'false');
            document.body.style.overflow = '';
            this.vibrate(50);
        }
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    setupKeyboardHandling() {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        this.handleVirtualKeyboard();
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
        document.addEventListener('keydown', (e) => {
            this.handleMobileKeyboard(e);
        });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    handleVirtualKeyboard() {
        let initialViewportHeight = window.innerHeight;
        
        window.addEventListener('resize', () => {
            const currentHeight = window.innerHeight;
            const heightDifference = initialViewportHeight - currentHeight;
            
            if (heightDifference > 150) {
                // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–∞
                document.body.classList.add('keyboard-open');
            } else {
                // –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∑–∞–∫—Ä—ã—Ç–∞
                document.body.classList.remove('keyboard-open');
            }
        });
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
    handleMobileKeyboard(e) {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∫–ª–∞–≤–∏—à
        if (e.key === 'Enter' && e.target.tagName === 'INPUT') {
            const form = e.target.closest('form');
            if (form) {
                const inputs = Array.from(form.querySelectorAll('input, select, textarea'));
                const currentIndex = inputs.indexOf(e.target);
                const nextInput = inputs[currentIndex + 1];
                
                if (nextInput) {
                    e.preventDefault();
                    nextInput.focus();
                } else {
                    // –ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–ª–µ - –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É
                    form.submit();
                }
            }
        }
    }

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–æ–±–∏–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
    getMobileInfo() {
        return {
            isTouchDevice: 'ontouchstart' in window,
            isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),
            hasVibration: 'vibrate' in navigator,
            hasOrientation: 'orientation' in window,
            screenWidth: window.innerWidth,
            screenHeight: window.innerHeight,
            devicePixelRatio: window.devicePixelRatio || 1
        };
    }
    
    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
    optimizeForSlowConnection() {
        if (navigator.connection) {
            const connection = navigator.connection;
            if (connection.effectiveType === 'slow-2g' || connection.effectiveType === '2g') {
                // –û—Ç–∫–ª—é—á–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –º–µ–¥–ª–µ–Ω–Ω—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
                document.body.classList.add('slow-connection');
                
                // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
                this.preloadCriticalResources();
            }
        }
    }
    
    // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤
    preloadCriticalResources() {
        const criticalResources = [
            'styles/crewlife.css',
            'scripts/crewlife.js'
        ];
        
        criticalResources.forEach(resource => {
            const link = document.createElement('link');
            link.rel = 'preload';
            link.href = resource;
            link.as = resource.endsWith('.css') ? 'style' : 'script';
            document.head.appendChild(link);
        });
    }
    
    // –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∞
    setupOrientationHandling() {
        window.addEventListener('orientationchange', () => {
            setTimeout(() => {
                this.handleOrientationChange();
            }, 100);
        });
        
        window.addEventListener('resize', () => {
            this.handleResize();
        });
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
    handleOrientationChange() {
        const info = this.getMobileInfo();
        console.log('–û—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è –∏–∑–º–µ–Ω–∏–ª–∞—Å—å:', info);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã—Å–æ—Ç—É viewport –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
        const vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', `${vh}px`);
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
    handleResize() {
        const info = this.getMobileInfo();
        
        // –û–±–Ω–æ–≤–ª—è–µ–º CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è viewport
        const vh = window.innerHeight * 0.01;
        const vw = window.innerWidth * 0.01;
        document.documentElement.style.setProperty('--vh', `${vh}px`);
        document.documentElement.style.setProperty('--vw', `${vw}px`);
        
        // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø–æ–¥ –Ω–æ–≤—ã–π —Ä–∞–∑–º–µ—Ä
        this.adaptInterfaceToScreenSize(info);
    }
    
    // –ê–¥–∞–ø—Ç–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø–æ–¥ —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
    adaptInterfaceToScreenSize(info) {
        if (info.screenWidth < 480) {
            document.body.classList.add('very-small-screen');
        } else {
            document.body.classList.remove('very-small-screen');
        }
        
        if (info.screenWidth >= 768) {
            document.body.classList.add('tablet-or-larger');
        } else {
            document.body.classList.remove('tablet-or-larger');
        }
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π
document.addEventListener('DOMContentLoaded', () => {
    window.mobileEnhancements = new MobileEnhancements();
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–±–∏–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    console.log('Mobile Enhancements –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    console.log('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–±–∏–ª—å–Ω—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö:', window.mobileEnhancements.getMobileInfo());
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –º–æ–¥—É–ª—è—Ö
if (typeof module !== 'undefined' && module.exports) {
    module.exports = MobileEnhancements;
}
