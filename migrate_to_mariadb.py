#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQLite –≤ MariaDB —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π –Ω–∞ bcrypt
"""

import sqlite3
import pymysql
import bcrypt
import json
from datetime import datetime
import os

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
SQLITE_DB = '/root/CrewServiceWebsite/CrewServiceWebsite/CrewServiceWebsite/crewlife-website/backend/crewlife.db'
MARIADB_CONFIG = {
    'host': 'localhost',
    'user': 'crewlife_user',
    'password': 'andrei8002012',
    'database': 'crewlife_prod',
    'charset': 'utf8mb4'
}

def get_sqlite_connection():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite"""
    return sqlite3.connect(SQLITE_DB)

def get_mariadb_connection():
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MariaDB"""
    return pymysql.connect(**MARIADB_CONFIG)

def hash_password_bcrypt(password):
    """–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è —Å –ø–æ–º–æ—â—å—é bcrypt"""
    salt = bcrypt.gensalt(rounds=12)
    return bcrypt.hashpw(password.encode('utf-8'), salt).decode('utf-8')

def migrate_users():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ SQLite –≤ MariaDB"""
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
    
    with get_sqlite_connection() as sqlite_conn:
        sqlite_conn.row_factory = sqlite3.Row
        sqlite_cursor = sqlite_conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ SQLite
        sqlite_cursor.execute('''
            SELECT employee_id, first_name, last_name, position, location, 
                   email, password_hash, role, status, created_at, last_login
            FROM users
        ''')
        
        users = sqlite_cursor.fetchall()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ SQLite")
        
        with get_mariadb_connection() as mariadb_conn:
            mariadb_cursor = mariadb_conn.cursor()
            
            # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É users –≤ MariaDB (–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ!)
            print("‚ö†Ô∏è  –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É users –≤ MariaDB...")
            mariadb_cursor.execute('DELETE FROM users')
            
            migrated_count = 0
            for user in users:
                try:
                    # –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
                    # –í —Ä–µ–∞–ª—å–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å–∏—Ç—å –Ω–æ–≤—ã–µ –ø–∞—Ä–æ–ª–∏
                    new_password = 'andrei8002012'  # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
                    hashed_password = hash_password_bcrypt(new_password)
                    
                    # –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ MariaDB
                    mariadb_cursor.execute('''
                        INSERT INTO users 
                        (employee_id, full_name, position, location, password, is_active, created_at, last_login)
                        VALUES (%s, %s, %s, %s, %s, %s, %s, %s)
                    ''', (
                        user['employee_id'],
                        f"{user['first_name']} {user['last_name']}",  # –û–±—ä–µ–¥–∏–Ω—è–µ–º –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é
                        user['position'],
                        user['location'],
                        hashed_password,
                        1 if user['status'] == 'active' else 0,
                        user['created_at'],
                        user['last_login']
                    ))
                    
                    migrated_count += 1
                    print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user['employee_id']} - {user['first_name']} {user['last_name']}")
                    
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user['employee_id']}: {e}")
            
            mariadb_conn.commit()
            print(f"üéâ –£—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ {migrated_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")

def migrate_requests():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –∑–∞—è–≤–æ–∫ –∏–∑ SQLite –≤ MariaDB"""
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –∑–∞—è–≤–æ–∫...")
    
    with get_sqlite_connection() as sqlite_conn:
        sqlite_conn.row_factory = sqlite3.Row
        sqlite_cursor = sqlite_conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞—è–≤–∫–∏ –∏–∑ SQLite
        sqlite_cursor.execute('''
            SELECT user_id, request_type, title, description, priority, 
                   status, assigned_to, created_at, updated_at, resolved_at
            FROM requests
        ''')
        
        requests = sqlite_cursor.fetchall()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(requests)} –∑–∞—è–≤–æ–∫ –≤ SQLite")
        
        if requests:
            with get_mariadb_connection() as mariadb_conn:
                mariadb_cursor = mariadb_conn.cursor()
                
                # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É requests –≤ MariaDB
                print("‚ö†Ô∏è  –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É requests –≤ MariaDB...")
                mariadb_cursor.execute('DELETE FROM requests')
                
                migrated_count = 0
                for request in requests:
                    try:
                        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π user_id –∏–∑ MariaDB –ø–æ employee_id
                        # –î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π user_id
                        mariadb_cursor.execute('SELECT id FROM users LIMIT 1')
                        new_user_id = mariadb_cursor.fetchone()[0]
                        
                        mariadb_cursor.execute('''
                            INSERT INTO requests 
                            (user_id, request_type, title, description, priority, status, assigned_to, 
                             created_at, updated_at, resolved_at)
                            VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s)
                        ''', (
                            new_user_id,
                            request['request_type'],
                            request['title'],
                            request['description'],
                            request['priority'],
                            request['status'],
                            request['assigned_to'],
                            request['created_at'],
                            request['updated_at'],
                            request['resolved_at']
                        ))
                        
                        migrated_count += 1
                        print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –∑–∞—è–≤–∫–∞: {request['title']}")
                        
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –∑–∞—è–≤–∫–∏ {request['title']}: {e}")
                
                mariadb_conn.commit()
                print(f"üéâ –£—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ {migrated_count} –∑–∞—è–≤–æ–∫")

def migrate_settings():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ SQLite –≤ MariaDB"""
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫...")
    
    with get_sqlite_connection() as sqlite_conn:
        sqlite_conn.row_factory = sqlite3.Row
        sqlite_cursor = sqlite_conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ SQLite
        sqlite_cursor.execute('''
            SELECT key, value, description, category, updated_at
            FROM settings
        ''')
        
        settings = sqlite_cursor.fetchall()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(settings)} –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ SQLite")
        
        if settings:
            with get_mariadb_connection() as mariadb_conn:
                mariadb_cursor = mariadb_conn.cursor()
                
                # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É settings –≤ MariaDB
                print("‚ö†Ô∏è  –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É settings –≤ MariaDB...")
                mariadb_cursor.execute('DELETE FROM settings')
                
                migrated_count = 0
                for setting in settings:
                    try:
                        mariadb_cursor.execute('''
                            INSERT INTO settings 
                            (setting_key, setting_value, description, category, updated_at)
                            VALUES (%s, %s, %s, %s, %s)
                        ''', (
                            setting['key'],
                            setting['value'],
                            setting['description'],
                            setting['category'],
                            setting['updated_at']
                        ))
                        
                        migrated_count += 1
                        print(f"‚úÖ –ú–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞: {setting['key']}")
                        
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ {setting['key']}: {e}")
                
                mariadb_conn.commit()
                print(f"üéâ –£—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ {migrated_count} –Ω–∞—Å—Ç—Ä–æ–µ–∫")

def migrate_logs():
    """–ú–∏–≥—Ä–∞—Ü–∏—è –ª–æ–≥–æ–≤ –∏–∑ SQLite –≤ MariaDB"""
    print("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –ª–æ–≥–æ–≤...")
    
    with get_sqlite_connection() as sqlite_conn:
        sqlite_conn.row_factory = sqlite3.Row
        sqlite_cursor = sqlite_conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ª–æ–≥–∏ –∏–∑ SQLite
        sqlite_cursor.execute('''
            SELECT user_id, action, details, ip_address, user_agent, created_at
            FROM logs
        ''')
        
        logs = sqlite_cursor.fetchall()
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ {len(logs)} –ª–æ–≥–æ–≤ –≤ SQLite")
        
        if logs:
            with get_mariadb_connection() as mariadb_conn:
                mariadb_cursor = mariadb_conn.cursor()
                
                # –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É logs –≤ MariaDB
                print("‚ö†Ô∏è  –û—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É logs –≤ MariaDB...")
                mariadb_cursor.execute('DELETE FROM logs')
                
                migrated_count = 0
                for log in logs:
                    try:
                        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–π user_id –∏–∑ MariaDB (–µ—Å–ª–∏ –µ—Å—Ç—å)
                        new_user_id = None
                        if log['user_id']:
                            mariadb_cursor.execute('SELECT id FROM users LIMIT 1')
                            result = mariadb_cursor.fetchone()
                            if result:
                                new_user_id = result[0]
                        
                        mariadb_cursor.execute('''
                            INSERT INTO logs 
                            (user_id, action, details, ip_address, user_agent, created_at)
                            VALUES (%s, %s, %s, %s, %s, %s)
                        ''', (
                            new_user_id,
                            log['action'],
                            log['details'],
                            log['ip_address'],
                            log['user_agent'],
                            log['created_at']
                        ))
                        
                        migrated_count += 1
                        
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –ª–æ–≥–∞: {e}")
                
                mariadb_conn.commit()
                print(f"üéâ –£—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω–æ {migrated_count} –ª–æ–≥–æ–≤")

def create_backup():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é SQLite –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    backup_filename = f"crewlife_sqlite_backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.db"
    backup_path = f"/root/CrewServiceWebsite/CrewServiceWebsite/CrewServiceWebsite/{backup_filename}"
    
    try:
        with get_sqlite_connection() as source:
            with sqlite3.connect(backup_path) as backup:
                source.backup(backup)
        
        print(f"‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: {backup_path}")
        return backup_path
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å SQLite –Ω–∞ MariaDB —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π")
    print("=" * 70)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    try:
        with get_sqlite_connection() as conn:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ SQLite —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ SQLite: {e}")
        return
    
    try:
        with get_mariadb_connection() as conn:
            print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MariaDB —É—Å–ø–µ—à–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MariaDB: {e}")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    backup_path = create_backup()
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏—é
    try:
        migrate_users()
        migrate_requests()
        migrate_settings()
        migrate_logs()
        
        print("\n" + "=" * 70)
        print("üéâ –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!")
        print("=" * 70)
        print("üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:")
        print("   ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ bcrypt")
        print("   ‚úÖ –ó–∞—è–≤–∫–∏ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        print("   ‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        print("   ‚úÖ –õ–æ–≥–∏ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        print(f"   üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è SQLite: {backup_path}")
        print("\nüîê –í–ê–ñ–ù–û: –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å 'andrei8002012'")
        print("   –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞!")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏: {e}")
        print("üîÑ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏")

if __name__ == "__main__":
    main()
