#!/usr/bin/env node

const mysql = require('mysql2/promise');
require('dotenv').config();

async function initializeDatabase() {
  console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö MariaDB...');
  
  const config = {
    host: process.env.DB_HOST || '127.0.0.1',
    port: process.env.DB_PORT || 3306,
    user: process.env.DB_USER || 'root',
    password: process.env.DB_PASSWORD || '',
    database: process.env.DB_NAME || 'crewlife_prod',
    charset: 'utf8mb4'
  };

  let connection;
  
  try {
    console.log('üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MariaDB...');
    connection = await mysql.createConnection(config);
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã users...');
    await connection.execute(`
      CREATE TABLE IF NOT EXISTS users (
        id VARCHAR(36) PRIMARY KEY DEFAULT (UUID()),
        employee_id VARCHAR(50) UNIQUE NOT NULL COMMENT '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä',
        full_name VARCHAR(255) NOT NULL COMMENT '–§–ò–û –ø–æ–ª–Ω–æ—Å—Ç—å—é',
        password VARCHAR(255) NOT NULL COMMENT '–•–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å',
        position VARCHAR(100) NOT NULL COMMENT '–î–æ–ª–∂–Ω–æ—Å—Ç—å',
        location VARCHAR(100) NOT NULL COMMENT '–õ–æ–∫–∞—Ü–∏—è',
        is_active BOOLEAN DEFAULT TRUE COMMENT '–ê–∫—Ç–∏–≤–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
        last_login TIMESTAMP NULL COMMENT '–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥',
        
        INDEX idx_employee_id (employee_id),
        INDEX idx_full_name (full_name),
        INDEX idx_position (position),
        INDEX idx_location (location),
        INDEX idx_is_active (is_active),
        INDEX idx_created_at (created_at)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='–¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–∏—Å—Ç–µ–º—ã'
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ users —Å–æ–∑–¥–∞–Ω–∞');

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∑–∞—è–≤–æ–∫ –Ω–∞ –∞–≤–∏–∞–±–∏–ª–µ—Ç—ã
    console.log('‚úàÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã flight_orders...');
    await connection.execute(`
      CREATE TABLE IF NOT EXISTS flight_orders (
        id VARCHAR(36) PRIMARY KEY DEFAULT (UUID()),
        order_number VARCHAR(50) UNIQUE NOT NULL COMMENT '–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏',
        user_id VARCHAR(36) NOT NULL COMMENT 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        employee_id VARCHAR(50) NOT NULL COMMENT '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä',
        full_name VARCHAR(255) NOT NULL COMMENT '–§–ò–û',
        
        departure_city VARCHAR(100) NOT NULL COMMENT '–ì–æ—Ä–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
        arrival_city VARCHAR(100) NOT NULL COMMENT '–ì–æ—Ä–æ–¥ –ø—Ä–∏–±—ã—Ç–∏—è',
        departure_date DATE NOT NULL COMMENT '–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
        departure_time TIME NOT NULL COMMENT '–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è',
        arrival_date DATE NOT NULL COMMENT '–î–∞—Ç–∞ –ø—Ä–∏–±—ã—Ç–∏—è',
        arrival_time TIME NOT NULL COMMENT '–í—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è',
        flight_number VARCHAR(20) NULL COMMENT '–ù–æ–º–µ—Ä —Ä–µ–π—Å–∞',
        airline VARCHAR(100) NULL COMMENT '–ê–≤–∏–∞–∫–æ–º–ø–∞–Ω–∏—è',
        
        purpose TEXT NULL COMMENT '–¶–µ–ª—å –ø–æ–µ–∑–¥–∫–∏',
        priority ENUM('LOW', 'MEDIUM', 'HIGH', 'URGENT') DEFAULT 'MEDIUM' COMMENT '–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç',
        passengers INT DEFAULT 1 COMMENT '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Å—Å–∞–∂–∏—Ä–æ–≤',
        luggage_info TEXT NULL COMMENT '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–≥–∞–∂–µ',
        special_requests TEXT NULL COMMENT '–û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è',
        
        status ENUM('NEW', 'PROCESSING', 'CONFIRMED', 'REJECTED', 'COMPLETED', 'CANCELLED') DEFAULT 'NEW' COMMENT '–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
        processed_by VARCHAR(36) NULL COMMENT 'ID –æ–±—Ä–∞–±–æ—Ç–∞–≤—à–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
        processed_at TIMESTAMP NULL COMMENT '–î–∞—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏',
        admin_notes TEXT NULL COMMENT '–ó–∞–º–µ—Ç–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
        
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
        FOREIGN KEY (processed_by) REFERENCES users(id) ON DELETE SET NULL,
        
        INDEX idx_order_number (order_number),
        INDEX idx_user_id (user_id),
        INDEX idx_employee_id (employee_id),
        INDEX idx_status (status),
        INDEX idx_departure_date (departure_date),
        INDEX idx_created_at (created_at)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='–ó–∞—è–≤–∫–∏ –Ω–∞ –∞–≤–∏–∞–±–∏–ª–µ—Ç—ã'
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ flight_orders —Å–æ–∑–¥–∞–Ω–∞');

    // –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∑–∞—è–≤–æ–∫ –Ω–∞ –æ—Ç–µ–ª–∏
    console.log('üè® –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã hotel_orders...');
    await connection.execute(`
      CREATE TABLE IF NOT EXISTS hotel_orders (
        id VARCHAR(36) PRIMARY KEY DEFAULT (UUID()),
        order_number VARCHAR(50) UNIQUE NOT NULL COMMENT '–ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏',
        user_id VARCHAR(36) NOT NULL COMMENT 'ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è',
        employee_id VARCHAR(50) NOT NULL COMMENT '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä',
        full_name VARCHAR(255) NOT NULL COMMENT '–§–ò–û',
        
        city VARCHAR(100) NOT NULL COMMENT '–ì–æ—Ä–æ–¥',
        check_in_date DATE NOT NULL COMMENT '–î–∞—Ç–∞ –∑–∞–µ–∑–¥–∞',
        check_in_time TIME NOT NULL COMMENT '–í—Ä–µ–º—è –∑–∞–µ–∑–¥–∞',
        check_out_date DATE NOT NULL COMMENT '–î–∞—Ç–∞ –≤—ã–µ–∑–¥–∞',
        check_out_time TIME NOT NULL COMMENT '–í—Ä–µ–º—è –≤—ã–µ–∑–¥–∞',
        flight_date DATE NULL COMMENT '–î–∞—Ç–∞ —Ä–µ–π—Å–∞',
        flight_number VARCHAR(20) NULL COMMENT '–ù–æ–º–µ—Ä —Ä–µ–π—Å–∞',
        
        status ENUM('NEW', 'PROCESSING', 'CONFIRMED', 'REJECTED', 'COMPLETED', 'CANCELLED') DEFAULT 'NEW' COMMENT '–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT '–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è',
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è',
        processed_by VARCHAR(36) NULL COMMENT 'ID –æ–±—Ä–∞–±–æ—Ç–∞–≤—à–µ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
        processed_at TIMESTAMP NULL COMMENT '–î–∞—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏',
        admin_notes TEXT NULL COMMENT '–ó–∞–º–µ—Ç–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
        
        FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
        FOREIGN KEY (processed_by) REFERENCES users(id) ON DELETE SET NULL,
        
        INDEX idx_order_number (order_number),
        INDEX idx_user_id (user_id),
        INDEX idx_employee_id (employee_id),
        INDEX idx_status (status),
        INDEX idx_check_in_date (check_in_date),
        INDEX idx_created_at (created_at)
      ) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='–ó–∞—è–≤–∫–∏ –Ω–∞ –æ—Ç–µ–ª–∏'
    `);
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ hotel_orders —Å–æ–∑–¥–∞–Ω–∞');

    console.log('üéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü...');
    const [tables] = await connection.execute('SHOW TABLES');
    console.log('üìã –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:');
    tables.forEach(table => {
      console.log(`   - ${Object.values(table)[0]}`);
    });

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
    process.exit(1);
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
    }
  }
}

// –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
if (require.main === module) {
  initializeDatabase()
    .then(() => {
      console.log('‚ú® –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
      process.exit(0);
    })
    .catch((error) => {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}

module.exports = { initializeDatabase };
