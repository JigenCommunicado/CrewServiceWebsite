#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π –Ω–∞ bcrypt –≤ MariaDB
"""

import subprocess
import hashlib
import os

def run_mysql_command(sql):
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL –∫–æ–º–∞–Ω–¥—ã –≤ MariaDB"""
    try:
        cmd = f"mysql -u crewlife_user -pandrei8002012 crewlife_prod -e \"{sql}\""
        result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
        if result.returncode != 0:
            print(f"‚ùå –û—à–∏–±–∫–∞ SQL: {result.stderr}")
            return False, None
        return True, result.stdout
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: {e}")
        return False, None

def install_bcrypt():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ bcrypt —á–µ—Ä–µ–∑ pip"""
    print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º bcrypt...")
    try:
        result = subprocess.run([
            "python3", "-c", 
            "import subprocess; subprocess.run(['pip', 'install', 'bcrypt', '--break-system-packages'])"
        ], capture_output=True, text=True)
        
        if result.returncode == 0:
            print("‚úÖ bcrypt —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ bcrypt: {result.stderr}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        return False

def hash_password_bcrypt(password):
    """–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è —Å –ø–æ–º–æ—â—å—é bcrypt"""
    try:
        import bcrypt
        salt = bcrypt.gensalt(rounds=12)
        return bcrypt.hashpw(password.encode('utf-8'), salt).decode('utf-8')
    except ImportError:
        print("‚ùå bcrypt –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º SHA-256")
        return hashlib.sha256(password.encode()).hexdigest()

def update_passwords_to_bcrypt():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π –Ω–∞ bcrypt —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    print("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π –Ω–∞ bcrypt...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    success, output = run_mysql_command("SELECT id, employee_id, full_name FROM users")
    if not success:
        return False
    
    # –ü–∞—Ä—Å–∏–º –≤—ã–≤–æ–¥ (–ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏)
    lines = output.strip().split('\n')[1:]  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
    
    updated_count = 0
    for line in lines:
        if line.strip():
            parts = line.split('\t')
            if len(parts) >= 3:
                user_id = parts[0]
                employee_id = parts[1]
                full_name = parts[2]
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π bcrypt —Ö–µ—à –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
                new_password = 'andrei8002012'
                bcrypt_hash = hash_password_bcrypt(new_password)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
                sql = f"UPDATE users SET password = '{bcrypt_hash}' WHERE id = {user_id}"
                if run_mysql_command(sql)[0]:
                    updated_count += 1
                    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø–∞—Ä–æ–ª—å –¥–ª—è: {employee_id} - {full_name}")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –¥–ª—è: {employee_id}")
    
    print(f"üéâ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –ø–∞—Ä–æ–ª–µ–π")
    return True

def create_production_config():
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"""
    print("‚öôÔ∏è  –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞...")
    
    config_content = """# CrewLife Production Configuration
# MariaDB Configuration
DB_TYPE=mysql
DB_HOST=localhost
DB_PORT=3306
DB_NAME=crewlife_prod
DB_USER=crewlife_user
DB_PASSWORD=andrei8002012

# Security
JWT_SECRET=crewlife_production_secret_key_2024_change_this
BCRYPT_SALT_ROUNDS=12

# Server Configuration
NODE_ENV=production
DEBUG=false
LOG_LEVEL=info

# API Configuration
API_HOST=0.0.0.0
API_PORT=5000
CORS_ORIGIN=https://crewlife.ru

# Backup Configuration
BACKUP_ENABLED=true
BACKUP_INTERVAL_HOURS=24
BACKUP_RETENTION_DAYS=30
"""
    
    try:
        with open('.env.production', 'w') as f:
            f.write(config_content)
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ —Å–æ–∑–¥–∞–Ω–∞: .env.production")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

def update_api_to_use_mariadb():
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ API –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è MariaDB"""
    print("üîÑ –û–±–Ω–æ–≤–ª—è–µ–º API –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è MariaDB...")
    
    # –°–æ–∑–¥–∞–µ–º —Å–∏–º–≤–æ–ª–∏—á–µ—Å–∫—É—é —Å—Å—ã–ª–∫—É –Ω–∞ MariaDB API
    try:
        api_path = "/root/CrewServiceWebsite/CrewServiceWebsite/CrewServiceWebsite/crewlife-website/backend/api.py"
        mariadb_api_path = "/root/CrewServiceWebsite/CrewServiceWebsite/CrewServiceWebsite/crewlife-website/backend/api_mysql.py"
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ API
        subprocess.run(f"cp {api_path} {api_path}.sqlite_backup", shell=True)
        
        # –ö–æ–ø–∏—Ä—É–µ–º MariaDB API –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π
        subprocess.run(f"cp {mariadb_api_path} {api_path}", shell=True)
        
        print("‚úÖ API –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è MariaDB")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è API: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"""
    print("üöÄ –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ —Å MariaDB –∏ bcrypt")
    print("=" * 60)
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º bcrypt
    if not install_bcrypt():
        print("‚ö†Ô∏è  –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ bcrypt, –∏—Å–ø–æ–ª—å–∑—É–µ–º SHA-256")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª–∏
    if not update_passwords_to_bcrypt():
        print("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    if not create_production_config():
        print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º API
    if not update_api_to_use_mariadb():
        print("‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è API")
        return
    
    print("\n" + "=" * 60)
    print("üéâ –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
    print("=" * 60)
    print("üìã –ß—Ç–æ –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ:")
    print("   ‚úÖ –ü–∞—Ä–æ–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ bcrypt —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ")
    print("   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ (.env.production)")
    print("   ‚úÖ API –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è MariaDB")
    print("   üíæ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è SQLite API —Å–æ–∑–¥–∞–Ω–∞")
    print("\nüîê –í–ê–ñ–ù–û:")
    print("   ‚Ä¢ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–º–µ—é—Ç –ø–∞—Ä–æ–ª—å 'andrei8002012'")
    print("   ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞")
    print("   ‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ–¥–∞–∫—à–µ–Ω—É —Å MariaDB")
    print("\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
    print("   python3 crewlife-website/backend/api.py")

if __name__ == "__main__":
    main()
